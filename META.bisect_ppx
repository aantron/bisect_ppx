# This is a dump of the JBuilder-generated META file, originally placed
# by Jbuilder into _build/install/default/lib/bisect_ppx META. It is
# extended with two extra packages .fast and .plugin, which were
# previously in META.bisect_ppx.template. If this file is restored to
# Jbuilder control, the template must be restored. See
#   http://jbuilder.readthedocs.io/en/latest/advanced-topics.html#meta-file-generation
#
# The purpose of the explicit META is to work around
#   https://github.com/janestreet/jbuilder/issues/163
# by implementing a different PPX packaging scheme.

version = "dev"
description = "Code coverage for OCaml"
requires(ppx_driver) = "bisect_ppx.omp"
requires(-ppx_driver) = "bisect_ppx.runtime"
ppx(-ppx_driver,-custom_ppx) = "./ppx.exe --as-ppx"

package "omp" (
  version = "dev"
  description = "Bisect_ppx ocaml-migrate-parsetree PPX (internal)"
  requires = "bigarray
              bisect_ppx.runtime
              compiler-libs
              compiler-libs.common
              ocaml-migrate-parsetree
              ppx_tools_versioned
              ppx_tools_versioned.metaquot_404
              str
              unix"
  ppx_runtime_deps = "bisect_ppx.runtime"
  archive(byte) = "bisect_ppx.cma"
  archive(native) = "bisect_ppx.cmxa"
  plugin(byte) = "bisect_ppx.cma"
  plugin(native) = "bisect_ppx.cmxs"
)

package "ocamlbuild" (
  directory = "ocamlbuild"
  version = "dev"
  description = "Bisect_ppx Ocamlbuild plugin"
  requires = "ocamlbuild unix"
  archive(byte) = "bisect_ppx_ocamlbuild.cma"
  archive(native) = "bisect_ppx_ocamlbuild.cmxa"
  plugin(byte) = "bisect_ppx_ocamlbuild.cma"
  plugin(native) = "bisect_ppx_ocamlbuild.cmxs"
)

package "runtime" (
  directory = "runtime"
  version = "dev"
  description = "Bisect_ppx runtime library (internal)"
  requires = ""
  archive(byte) = "bisect.cma"
  archive(native) = "bisect.cmxa"
  plugin(byte) = "bisect.cma"
  plugin(native) = "bisect.cmxs"
)

package "fast" (
  version = "dev"
  description = "Old Bisect_ppx package (deprecated)"
  requires = "bisect_ppx"
)

package "plugin" (
  version = "dev"
  description = "Old Bisect_ppx Ocamlbuild plugin (deprecated)"
  requires = "bisect_ppx.ocamlbuild"
)
