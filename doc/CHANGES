Version 1.0.0 ():
-----------------
  - Redesign HTML reports.
  - Put separate points on each clause of or-patterns.
  - Put points on applications of |>.
  - Eliminate -safe, -fast, -faster modes. All modes now fast and thread-safe.
  - Improve integration with other ppx preprocessors.
  - Install native ppx rewriter when possible.
  - Adjust which points have which kinds.
  - Clean up command-line help of bisect-ppx-report.
  - Add Ocamlbuild plugin helper and "coverage" tag.
  - New documentation.
  - Testing, build, and packaging improvements.

Version 0.2.6 (2016-01-01):
--------------------------
  - Fix missing 'function' and 'fun' expression instrumentation (Anton Bachin).
  - Update bisect-report test for recent points (Anton Bachin). 
  - Added appropriate tests (Anton Bachin).

Version 0.2.5 (2015-09-07):
---------------------------
  - Revert the _Random_ indices for output files, just create multiple
  - Correct dependency on Str in META.
  - Obey OCamls line directive when looking for BISECT comments.

Version 0.2.4 (2015-08-14):
---------------------------
  - Fast mode returns: create one array to track instrumented points per
    implementation file (module). Created a separate findlib package:
    bisect_ppx.fast to implement this method (just calls the ppx rewriter
    with the appropriate argument).
  - Runtime logging now default to a file: bisect.log. To regain original
    behavior set BISECT_SILENT=ERR. You can use the same variable to set
    a filename.
  - Fixed bug for creating html reports off of implicit filenames.

Version 0.2.3 (2015-06-17):
--------------------------
  - @hnrgrgr Fixed more comment lexing bugs

Version 0.2.2 (2015-06-12):
---------------------------
  - Added a runtime only package distribution for findlib.
  - Change the points annotation method, 'For' loops are correctly labeled.
    - Updated appropriate test.
  - When linking with '-thread' _Random_ indices are used for the output files.
  - @simonjbeaumont, fix for exclusions of locally abstract typed definitions.

Version 0.2.1 (2015-05-22):
---------------------------
  - fix double slashes at the end of a string bug, due to BISECT
    specifiy commenting.

Version 0.2 (2015-05-15):
-------------------------
  - fix bug to make sure that we don't instrument other ppx attributes.

Version 0.1 (2015-05-06):
-------------------------
  - start versioning for bisect_ppx (just the ppx no CamlP4) of Bisect. 
    - Original bisect (changes below).

Version 1.3 (2012-11-03):
-------------------------
  - new instrumenter based on '-ppx'
  - new '-summary-only' to output only summary (text mode only)
  - refactoring, including minor bugfixes
  - bug#86: '-ocaml-prefix' doesn't really work
  - bug#87: install shouldn't build anything
  - bug#89: do not activate warnings by default

Version 1.2 (2012-08-14):
-------------------------
  - new '-combine-expr' to allow combination of results
  - new 'dump' output mode (mainly for debug)
  - new 'bisect' output mode (i. e. format of runtime data)
  - new '-exclude-file' command-line switch to exclude toplevel functions
    listed in a file
  - update for OCaml 4.00.0
  - bug #95: polymorphic recursion is not handled
  - bug #104: configure script should be executable

Version 1.1 (2011-02-12):
-------------------------
  - update for Objective Caml 3.12.0
  - new build system
  - 'instrument.cmo' renamed to 'bisect_pp.cmo' (and now depends on 'str.cma')
  - instrumentation modes ('safe', 'fast', and 'faster')
  - '-exclude' command-line switch to exclude functions from instrumentation
  - '(*BISECT-MARK*)' / '(*BISECT-VISIT*)' comments to mark lines
  - '(*BISECT-IGNORE-BEGIN*)' / '(*BISECT-IGNORE-END*)' / '(*BISECT-IGNORE*)'
    comments to ignore parts of source file
  - bug #51: unportable use of 'which'
  - bug #52: thread-compatibility module does not compile
  - bug #59: instrumented code is 20 times slower

Version 1.0 (2009-12-17):
-------------------------
  - switch to OCaml 3.11.1
  - multiple outputs now allowed at once
  - '-enable' / '-disable' command-line switches to control instrumentation
  - support for multithread applications
  - new output mode: EMMA-compatible XML
  - support for ocamlfind installation
  - major code refactoring and improvement
  - bug #41: '-I' command-line switch to specify search path

Version 1.0-beta (2009-05-31):
------------------------------
  - switch to OCaml 3.11.0
  - bug #30: incorrect detection of ocamljava
  - bug #31: default make target
  - bug #32: incorrect source rendering under Firefox
  - bug #33: information about global coverage missing
  - bug #34: bare text mode added
  - bug #35: introduction of navigation bar and code folding
  - bug #36: instrumentation with -unsafe switch
  - bug #37: incorrect handling of array literals
  - unreported bug regarding the handling of if/then construct with no else
  - introduction of CSV, XML modes
  - major code refactoring and improvement

Version 1.0-alpha (2008-07-06):
-------------------------------
  - first public version
